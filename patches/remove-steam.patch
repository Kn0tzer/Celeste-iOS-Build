diff --git a/Celeste/Achievements.cs b/Celeste/Achievements.cs
index 5a98ece..1f0a422 100644
--- a/Celeste/Achievements.cs
+++ b/Celeste/Achievements.cs
@@ -1,5 +1,3 @@
-using Steamworks;
-
 namespace Celeste;
 
 public static class Achievements
@@ -12,14 +10,13 @@ public static class Achievements
 	public static bool Has(Achievement achievement)
 	{
 		bool pbAchieved;
-		return SteamUserStats.GetAchievement(ID(achievement), out pbAchieved) && pbAchieved;
+		return false;
 	}
 
 	public static void Register(Achievement achievement)
 	{
 		if (!Has(achievement))
 		{
-			SteamUserStats.SetAchievement(ID(achievement));
 			Stats.Store();
 		}
 	}
diff --git a/Celeste/Celeste.cs b/Celeste/Celeste.cs
index 84d1e69..ead8e65 100644
--- a/Celeste/Celeste.cs
+++ b/Celeste/Celeste.cs
@@ -6,7 +6,6 @@ using Celeste.Pico8;
 using Microsoft.Xna.Framework;
 using Monocle;
 using SDL2;
-using Steamworks;
 
 namespace Celeste;
 
@@ -54,8 +53,6 @@ public class Celeste : Engine
 
 	public static Stopwatch LoadTimer;
 
-	public static readonly AppId_t SteamID = new AppId_t(504230u);
-
 	private static int _mainThreadId;
 
 	public static Vector2 TargetCenter => new Vector2(1920f, 1080f) / 2f;
@@ -118,7 +115,6 @@ public class Celeste : Engine
 
 	protected override void Update(GameTime gameTime)
 	{
-		SteamAPI.RunCallbacks();
 		StatsForStadia.BeginFrame(base.Window.Handle);
 		if (SaveRoutine != null)
 		{
@@ -185,19 +181,9 @@ public class Celeste : Engine
 			}
 			_mainThreadId = Thread.CurrentThread.ManagedThreadId;
 			Settings.Initialize();
-			if (SteamAPI.RestartAppIfNecessary(SteamID))
-			{
-				return;
-			}
-			if (!SteamAPI.Init())
-			{
-				ErrorLog.Write("Steam not found!");
-				ErrorLog.Open();
-				return;
-			}
 			if (!Settings.Existed)
 			{
-				Settings.Instance.Language = SteamApps.GetCurrentGameLanguage();
+				Settings.Instance.Language = "english";
 			}
 			_ = Settings.Existed;
 			for (int j = 0; j < args.Length - 1; j++)
diff --git a/Celeste/Stats.cs b/Celeste/Stats.cs
index c84e386..9850e7b 100644
--- a/Celeste/Stats.cs
+++ b/Celeste/Stats.cs
@@ -1,5 +1,4 @@
 using System.Collections.Generic;
-using Steamworks;
 
 namespace Celeste;
 
@@ -11,8 +10,7 @@ public static class Stats
 
 	public static void MakeRequest()
 	{
-		ready = SteamUserStats.RequestCurrentStats();
-		SteamUserStats.RequestGlobalStats(0);
+		ready = true;
 	}
 
 	public static bool Has()
@@ -29,10 +27,6 @@ public static class Stats
 			{
 				statToString.Add(stat, value = stat.ToString());
 			}
-			if (SteamUserStats.GetStat(value, out int pData))
-			{
-				SteamUserStats.SetStat(value, pData + increment);
-			}
 		}
 	}
 
@@ -46,7 +40,6 @@ public static class Stats
 			{
 				statToString.Add(stat, value = stat.ToString());
 			}
-			SteamUserStats.GetStat(value, out pData);
 		}
 		return pData;
 	}
@@ -61,17 +54,12 @@ public static class Stats
 			{
 				statToString.Add(stat, value = stat.ToString());
 			}
-			SteamUserStats.GetGlobalStat(value, out pData);
 		}
 		return pData;
 	}
 
 	public static void Store()
 	{
-		if (ready)
-		{
-			SteamUserStats.StoreStats();
-		}
 	}
 
 	public static string Name(Stat stat)
